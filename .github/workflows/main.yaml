name: CI-main

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  integration-e2e-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code to runner
        uses: actions/checkout@v5

      - name: Create system's network
        run: docker network create todo-net || true
      - name: Build, start back-end services and wait before they're all healthy
        working-directory: back-end
        run: |
          docker compose -f docker-compose.ci.yaml build --no-cache
          docker compose -f docker-compose.ci.yaml up -d --wait
      - name: Build, start front-end services and wait before they're all healthy
        working-directory: front-end
        run: |
          docker compose -f docker-compose.ci.yaml build --no-cache
          docker compose -f docker-compose.ci.yaml up -d --wait

      - name: Run integration tests inside the API container
        working-directory: back-end
        run: docker compose -f docker-compose.ci.yaml exec -T api npm run integration-test

      - name: Copy integration reports from API container to runner
        working-directory: back-end
        run: |
          mkdir -p test/reports/integration
          docker cp todo-sails-app:/usr/todo-app/test/reports/integration ./test/reports || true
          ls -la test/reports/integration || true
      - name: Upload human-readable integration test report
        if: ${{ always() && env.ACTIONS_RUNTIME_TOKEN != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-report
          path: back-end/test/reports/integration
      - name: Upload machine-readable JUnit-like integration report
        if: ${{ always() && env.ACTIONS_RUNTIME_TOKEN != '' }}
        uses: dorny/test-reporter@v2
        with:
          name: "Integration tests"
          path: "back-end/test/reports/integration/results.xml"
          reporter: "java-junit"

        # Alternative (too slow, specially due to --with-deps flag in browser installation): https://playwright.dev/docs/ci-intro
      - name: Run front-end e2e (Playwright) tests
        working-directory: front-end
        run: docker compose -f docker-compose.ci.yaml exec -T e2e-tests npm run e2e-test

      - name: Copy e2e reports from e2e container to runner
        working-directory: front-end
        run: |
          mkdir -p test/reports/e2e
          docker cp todo-e2e:/usr/todo-app/playwright-report ./test/reports/e2e || true
          ls -la test/reports/e2e || true
      - name: Upload human-readable e2e test report
        if: ${{ always() && env.ACTIONS_RUNTIME_TOKEN != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-report
          path: front-end/test/reports/e2e

      - name: Debug - Test API from GUI container
        if: failure()
        run: docker exec todo-gui curl -v http://todo-sails-app:1337/health || true
      - name: Debug - Test webpack proxy /health from GUI container
        if: failure()
        run: docker exec todo-gui curl -v http://localhost:3000/health || true
      - name: Debug - Test webpack proxy /auth/csrf from GUI container
        if: failure()
        run: docker exec todo-gui curl -v http://localhost:3000/auth/csrf || true
      - name: Debug - Test webpack proxy /todo from GUI container
        if: failure()
        run: docker exec todo-gui curl -v http://localhost:3000/todo || true
      - name: Debug - Test API from e2e container
        if: failure()
        run: docker exec todo-e2e wget -O- http://todo-sails-app:1337/health || true
      - name: Debug - Test GUI from e2e container
        if: failure()
        run: docker exec todo-e2e wget -O- http://todo-gui:3000/ || true

      - name: Show api logs on failure
        if: failure()
        working-directory: back-end
        run: docker compose -f docker-compose.ci.yaml logs api || true
      - name: Show db logs on failure
        if: failure()
        working-directory: back-end
        run: docker compose -f docker-compose.ci.yaml logs db || true
      - name: Show session-db logs on failure
        if: failure()
        working-directory: back-end
        run: docker compose -f docker-compose.ci.yaml logs session-db || true
      - name: Show gui logs on failure
        if: failure()
        working-directory: front-end
        run: docker compose -f docker-compose.ci.yaml logs gui || true
      - name: Show e2e-tests logs on failure
        if: failure()
        working-directory: front-end
        run: docker compose -f docker-compose.ci.yaml logs e2e-tests || true

      - name: Stop back-end services
        if: always()
        working-directory: back-end
        run: docker compose -f docker-compose.ci.yaml down -v || true
      - name: Stop front-end services
        if: always()
        working-directory: front-end
        run: docker compose -f docker-compose.ci.yaml down -v || true
      - name: Remove system network
        if: always()
        run: docker network rm todo-net || true
