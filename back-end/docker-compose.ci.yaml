services:
  api:
    build:
      dockerfile: Dockerfile.ci
    container_name: todo-sails-app
    ports:
      - "1340:1337"
    environment:
      - API_HOST=localhost
      - API_PORT=1337
      - NODE_ENV=test
      - DATABASE_HOST=db
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_NAME=todo-db
      - DATABASE_PORT=5432
      - SESSION_HOST=session-db
      - SESSION_PORT=6379
      - SESSION_PASS=todo-redis
      - SESSION_DB=0
    depends_on:
      db:
        condition: service_healthy  
      session-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:1337/ || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 6
      start_period: 30s
    networks:
      - todo-net
      - todo-back-net
    # NO volumes section. Use built container files

  db:
    image: postgres:12.21
    container_name: todo-postgres-db
    environment:
      POSTGRES_DB: todo-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    networks:
      - todo-back-net
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d todo-db"] 
      interval: 10s
      timeout: 10s
      retries: 6
      start_period: 30s

  session-db:
    image: redis:7.4.1-alpine
    container_name: todo-redis
    ports:
      - "6379:6379"
    command: redis-server --requirepass todo-redis
    networks:
      - todo-back-net
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a todo-redis ping"]
      interval: 10s
      timeout: 10s
      retries: 6
      start_period: 30s

volumes:
  postgres-data:

networks:
  todo-back-net:
    driver: bridge
  todo-net:
    external: true